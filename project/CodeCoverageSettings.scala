import sbt.Setting
import scoverage.ScoverageKeys

object CodeCoverageSettings {

  private val excludedPackages: Seq[String] = Seq(
    "<empty>",
    "Reverse.*",
    "uk.gov.hmrc.BuildInfo",
    "app.*",
    "prod.*",
    ".*Routes.*",
    "testOnly.*",
    "testOnlyDoNotUseInAppConf.*",
  ".*controllers.agentInvitation.AgentInvitationErrorController.scala",
    ".*controllers.agentInvitation.ConfirmCountryCodeController.scala",
    ".*controllers.agentInvitation.DeleteAuthorisationController.scala",
    ".*controllers.agentInvitation.InvitationSentController.scala",
    ".*controllers.agentInvitation.ReviewAuthorisationsController.scala",
    ".*controllers.agentInvitation.SelectTaxServiceController.scala",
    ".*controllers.agentInvitation.ConfirmClientController.scala",
    ".*controllers.agentInvitation.ConfirmPostcodeController.scala",
    ".*controllers.agentInvitation.IdentifyClientController.scala",
    ".*controllers.agentInvitation.LegacyAuthorisationDetectedController.scala",
    ".*controllers.agentInvitation.SelectClientTypeController.scala",
    ".*controllers.agentInvitation.StartController.scala",
    ".*controllers.agentInvitationFastTrack.AgentFastTrackErrorController.scala",
    ".*controllers.agentInvitationFastTrack.CheckDetailsController.scala",
    ".*controllers.agentInvitationFastTrack.ConfirmCgtClientController.scala",
    ".*controllers.agentInvitationFastTrack.ConfirmClientController.scala",
    ".*controllers.agentInvitationFastTrack.ConfirmCountryCodeController.scala",
    ".*controllers.agentInvitationFastTrack.ConfirmPostcodeController.scala",
    ".*controllers.agentInvitationFastTrack.ConfirmPptClientController.scala",
    ".*controllers.agentInvitationFastTrack.ConfirmPptRegDateController.scala",
    ".*controllers.agentInvitationFastTrack.ConfirmTrustClientController.scala",
    ".*controllers.agentInvitationFastTrack.IdentifyClientController.scala",
    ".*controllers.agentInvitationFastTrack.InvitationSentController.scala",
    ".*controllers.agentInvitationFastTrack.KnownFactController.scala",
    ".*controllers.agentInvitationFastTrack.LegacyAuthorisationDetectedController.scala",
    ".*controllers.agentInvitationFastTrack.ProgressToController.scala",
    ".*controllers.agentInvitationFastTrack.SelectClientTypeController.scala",
    ".*controllers.agentInvitationFastTrack.StartController.scala",
    ".*controllers.agentLedDeauth.DeauthErrorController.scala",
    ".*controllers.agentLedDeauth.CancelAuthorisationController.scala",
    ".*controllers.agentLedDeauth.ConfirmClientController.scala",
    ".*controllers.agentLedDeauth.ConfirmCountryCodeController.scala",
    ".*controllers.agentLedDeauth.ConfirmPostcodeController.scala",
    ".*controllers.agentLedDeauth.IdentifyClientController.scala",
    ".*controllers.agentLedDeauth.SelectClientTypeController.scala",
    ".*controllers.agentLedDeauth.StartController.scala",
    ".*controllers.agentLedDeauth.LegacyAuthorisationDetectedController.scala",
    ".*controllers.agentLedDeauth.InvitationSentController.scala",
    ".*controllers.agentLedDeauth.ReviewAuthorisationsController.scala",
    ".*controllers.agentLedDeauth.SelectTaxServiceController.scala",
    ".*controllers.agentLedDeauth.ConfirmClientController.scala",
    ".*controllers.agentsRequestTracking.CancelRequestController.scala",
    ".*controllers.agentsRequestTracking.TrackRequestsController.scala",
    ".*controllers.agentsRequestTracking.ResendLinkController.scala",
    ".*controllers.agentsRequestTracking.CancelAuthorisationController.scala",
    ".*controllers.clientInvitation.ChangeConsentController.scala",
    ".*controllers.clientInvitation.InvitationErrorController.scala",
    ".*controllers.clientInvitation.CheckYourAnswersController.scala",
    ".*controllers.clientInvitation.ConfirmDeclineController.scala",
    ".*controllers.clientInvitation.ConsentController.scala",
    ".*controllers.clientInvitation.CreateNewUserIdController.scala",
    ".*controllers.clientInvitation.InvitationHistoryController.scala",
    ".*controllers.clientInvitation.SelectTaxServiceController.scala",
    ".*controllers.clientInvitation.SuspendedAgentController.scala",
    ".*controllers.clientInvitation.UserIdNeededController.scala",
    ".*controllers.clientInvitation.WarmUpController.scala",
    ".*controllers.SignOutController.scala"
  )

  val settings: Seq[Setting[_]] = Seq(
    ScoverageKeys.coverageExcludedPackages := excludedPackages.mkString(";"),
    ScoverageKeys.coverageMinimumStmtTotal := 100,
    ScoverageKeys.coverageFailOnMinimum := true,
    ScoverageKeys.coverageHighlighting := true
  )
}
